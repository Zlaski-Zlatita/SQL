names = ['Gvido', 'Roman', 'Timur'] 
position = names.index('Timur') 
print(position)

выведет:

2

names = ['Gvido', 'Roman', 'Timur'] 
if 'Anders' in names: 
   position = names.index('Anders') 
   print(position) 
else: 
   print('Такого значения нет в списке')

food = ['Рис', 'Курица', 'Рыба', 'Брокколи', 'Рис'] 
print(food) 
food.remove('Рис') 
print(food)

выведет:

['Рис', 'Курица', 'Рыба', 'Брокколи', 'Рис'] 
['Курица', 'Рыба', 'Брокколи', 'Рис']

names = ['Gvido', 'Roman', 'Timur'] 
item = names.pop(1) 
print(item) 
print(names)

выведет:

Roman ['Gvido', 'Timur']

names = ['Timur', 'Gvido', 'Roman', 'Timur', 'Anders', 'Timur'] 
cnt1 = names.count('Timur') 
cnt2 = names.count('Gvido') 
cnt3 = names.count('Josef') 

print(cnt1) 
print(cnt2) 
print(cnt3)

выведет:

3 
1 
0

Метод reverse() меняет порядок на противоположный.
names = ['Gvido', 'Roman', 'Timur'] 
names.reverse() 
print(names)

выведет:

['Timur', 'Roman', 'Gvido']

Метод clear() удаляет все элементы из списка.
names = ['Gvido', 'Roman', 'Timur'] 
names.clear() 
print(names)

выведет:

[]

names = ['Gvido', 'Roman', 'Timur'] 
names_copy = names.copy() # создаем поверхностную копию списка names 

print(names) 
print(names_copy)

выведет:

['Gvido', 'Roman', 'Timur'] ['Gvido', 'Roman', 'Timur']

Аналогичного результата можно достичь с помощью срезов или функции list():

names = ['Gvido', 'Roman', 'Timur'] 
names_copy1 = list(names) # создаем поверхностную копию с помощью функции list() 
names_copy2 = names[:] # создаем поверхностную копию с помощью среза от начала до конца
